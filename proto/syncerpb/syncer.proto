syntax = "proto3";

option go_package = "github.com/c12s/oort/proto/syncerpb";

package syncerpb;

import "common.proto";

service SyncerService {
  rpc CreateResource(CreateResourceReq) returns (SyncResp) {}
  rpc DeleteResource(DeleteResourceReq) returns (SyncResp) {}
  rpc CreateAggregationRel(CreateAggregationRelReq) returns (SyncResp) {}
  rpc DeleteAggregationRel(DeleteAggregationRelReq) returns (SyncResp) {}
  rpc CreateCompositionRel(CreateCompositionRelReq) returns (SyncResp) {}
  rpc DeleteCompositionRel(DeleteCompositionRelReq) returns (SyncResp) {}
  rpc CreateAttribute(CreateAttributeReq) returns (SyncResp) {}
  rpc UpdateAttribute(UpdateAttributeReq) returns (SyncResp) {}
  rpc DeleteAttribute(DeleteAttributeReq) returns (SyncResp) {}
  rpc CreatePermission(CreatePermissionReq) returns (SyncResp) {}
  rpc DeletePermission(DeletePermissionReq) returns (SyncResp) {}
}

message CreateResourceReq {
  common.Resource resource = 1;
  string id = 2;
}

message DeleteResourceReq {
  common.Resource resource = 1;
  string id = 2;
}

message CreateAggregationRelReq {
  common.Resource parent = 1;
  common.Resource child = 2;
  string id = 3;
}

message DeleteAggregationRelReq {
  common.Resource parent = 1;
  common.Resource child = 2;
  string id = 3;
}

message CreateCompositionRelReq {
  common.Resource parent = 1;
  common.Resource child = 2;
  string id = 3;
}

message DeleteCompositionRelReq {
  common.Resource parent = 1;
  common.Resource child = 2;
  string id = 3;
}

message CreateAttributeReq {
  common.Resource resource = 1;
  common.Attribute attribute = 2;
  string id = 3;
}

message UpdateAttributeReq {
  common.Resource resource = 1;
  common.Attribute attribute = 2;
  string id = 3;
}

message DeleteAttributeReq {
  common.Resource resource = 1;
  common.AttributeId attributeId = 2;
  string id = 3;
}

message CreatePermissionReq {
  common.Resource subject = 1;
  common.Resource object = 2;
  common.Permission permission = 3;
  string id = 4;
}

message DeletePermissionReq {
  common.Resource subject = 1;
  common.Resource object = 2;
  common.Permission permission = 3;
  string id = 4;
}

message SyncMessage {
  enum SyncKind {
      CreateResource = 0;
      DeleteResource = 1;
      CreateAttribute = 2;
      UpdateAttribute = 3;
      DeleteAttribute = 4;
      CreateAggregationRel = 5;
      DeleteAggregationRel = 6;
      CreateCompositionRel = 7;
      DeleteCompositionRel = 8;
      CreatePermission = 9;
      DeletePermission = 10;
  }
  SyncKind kind = 1;
  bytes payload = 2;
}

message SyncResp {
}

message AsyncSyncResp {
  string reqId = 1;
  bool successful = 2;
  string error = 3;
}